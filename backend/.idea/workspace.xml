<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7b1785b2-6e22-4160-a621-0a8d954d3e6f" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/backend.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/jarRepositories.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/.gitattributes" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/build.gradle" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/gradle/wrapper/gradle-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/gradle/wrapper/gradle-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/gradlew" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/gradlew.bat" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/settings.gradle" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/src/main/java/org/example/apigateway/ApiGatewayApplication.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/src/main/resources/application.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/api-gateway/src/test/java/org/example/apigateway/ApiGatewayApplicationTests.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/.gitattributes" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/build.gradle" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/gradle/wrapper/gradle-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/gradle/wrapper/gradle-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/gradlew" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/gradlew.bat" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/settings.gradle" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/main/java/org/example/configserver/ConfigServerApplication.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/main/resources/application.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/api-gateway.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/main/resources/configurations/discovery-server.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/config-server/src/test/java/org/example/configserver/ConfigServerApplicationTests.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/.gitattributes" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/build.gradle" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/gradle/wrapper/gradle-wrapper.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/gradle/wrapper/gradle-wrapper.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/gradlew" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/gradlew.bat" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/settings.gradle" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/src/main/java/org/example/discoveryserver/DiscoveryServerApplication.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/src/main/resources/application.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/discovery-server/src/test/java/org/example/discoveryserver/DiscoveryServerApplicationTests.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/eslint.config.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/public/vite.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/App.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/App.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/assets/react.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/components/NavBar.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/config/keycloak.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/context/KeycloakContext.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/index.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/main.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/pages/DoctorPage.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/pages/HomePage.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/pages/NotFoundPage.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/pages/PatientPage.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/pages/UnauthorizedPage.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/routes/ProtectedRoute.jsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/src/services/service.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/vite.config.js" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/services/api-gateway">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/config-server">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/services/discovery-server">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="api-gateway" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="33O0z3vRnO6FFfec66fCWmwqR9m" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.docker-compose.yml.config-server: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.discovery-server: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.api-gateway [:org.example.apigateway.ApiGatewayApplication.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.config-server [:org.example.configserver.ConfigServerApplication.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.discovery-server [:org.example.discoveryserver.DiscoveryServerApplication.main()].executor&quot;: &quot;Run&quot;,
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/programming/medical-records/archive/old-microservices/api-gateway&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\programming\medical-records\backend\services\discovery-server" />
      <recent name="C:\programming\medical-records\backend\services\config-server" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="KtorApplicationConfigurationType" />
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment">
    <configuration default="true" type="GroovyScriptRunConfiguration" factoryName="Groovy">
      <setting name="path" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="file://$PROJECT_DIR$" />
      <setting name="debug" value="false" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="api-gateway.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.apigateway.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConfigServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="config-server.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.configserver.ConfigServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="discovery-server.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.discoveryserver.DiscoveryServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.config-server: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="config-server" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.discovery-server: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="discovery-server" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.config-server: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.discovery-server: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7b1785b2-6e22-4160-a621-0a8d954d3e6f" name="Changes" comment="" />
      <created>1759173069163</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1759173069163</updated>
      <workItem from="1759173070235" duration="622000" />
      <workItem from="1759173737851" duration="8780000" />
      <workItem from="1759434074875" duration="10801000" />
      <workItem from="1759593057347" duration="562000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>